{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","target","rel","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","isLoading","setIsLoading","error","setError","movieData","setMovieData","handleSubmit","useCallback","e","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","trim","data","finally","poster","Poster","Title","Plot","imdbID","normalizeMovieData","handleAddMovie","handleChange","value","isDisable","onSubmit","htmlFor","type","id","placeholder","onChange","classNames","disabled","onClick","App","setMovies","some","film","prevState","ReactDOM","render","document","getElementById"],"mappings":"wTAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBACEC,KAAMP,EAAMQ,QACZ,UAAQ,WACRC,OAAO,SACPC,IAAI,aAJN,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKX,UAAU,SAAf,SACGW,EAAOC,KAAI,SAAAb,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMc,c,0BCFNC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAkCN,mBAA2B,MAA7D,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAeC,uBACnB,SAACC,GACCA,EAAEC,iBACFR,GAAa,GCfZ,SAAkBH,GACvB,OAAOY,MAAM,GAAD,OAHE,2CAGF,cAAiBZ,IAC1Ba,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBDYPC,CAASnB,EAAMoB,QACZP,MAAK,SAACQ,GACD,UAAWA,GACbhB,GAAS,GACTE,EAAa,QAEbA,EAAac,GACbhB,GAAS,OAGZiB,SAAQ,WACPnB,GAAa,QAEhB,CAACH,IAGAlB,EAAQwB,ECxBT,SAA4BA,GACjC,IAAMiB,EAA8B,QAArBjB,EAAUkB,OAEzB,MAAO,CACLrC,MAAOmB,EAAUmB,MACjBrC,YAAakB,EAAUoB,KACvBzC,OAAQsC,EACJjB,EAAUkB,OACV,4DACJ5B,OAAQU,EAAUqB,OAClBrC,QAAQ,8BAAD,OAAgCgB,EAAUqB,SDczBC,CAAmBtB,GAAa,KAEpDuB,EAAiBpB,uBAAY,WAC7BH,GAAaxB,GACfgB,EAAShB,GAGXmB,EAAS,IACTM,EAAa,QACZ,CAACD,EAAWR,IAETgC,EAAerB,uBAAY,SAACC,GAChCT,EAASS,EAAEnB,OAAOwC,OAClB1B,GAAS,GACTE,EAAa,QACZ,IAEGyB,EAAsB,KAAVhC,EAElB,OACE,qCACE,uBAAMjB,UAAU,aAAakD,SAAUzB,EAAvC,UACE,sBAAKzB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQmD,QAAQ,cAAjC,yBAIA,qBAAKnD,UAAU,UAAf,SACE,uBACE,UAAQ,aACRoD,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZtD,UAAU,kBACVgD,MAAO/B,EACPsC,SAAUR,MAIb1B,GACC,mBAAGrB,UAAU,iBAAiB,UAAQ,eAAtC,qDAOJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRoD,KAAK,SACLpD,UAAWwD,IAAW,SAAU,WAAY,CAC1C,aAAcrC,IAEhBsC,SAAUR,EANZ,4BAYD1B,GACC,qBAAKvB,UAAU,UAAf,SACE,wBACE,UAAQ,YACRoD,KAAK,SACLpD,UAAU,oBACV0D,QAASZ,EAJX,qCAaNvB,GAAaxB,GACb,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBAEA,cAAC,EAAD,CAAWD,MAAOA,WEjHf4D,G,MAAM,WACjB,MAA4B3C,mBAAkB,IAA9C,mBAAOL,EAAP,KAAeiD,EAAf,KAUA,OACE,sBAAK5D,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYW,OAAQA,MAGtB,qBAAKX,UAAU,UAAf,SACE,cAAC,EAAD,CAAWe,SAfA,SAAChB,GACCY,EAAOkD,MAAK,SAAAC,GAAI,OAAIA,EAAKjD,SAAWd,EAAMc,WAGzD+C,GAAU,SAAAG,GAAS,4BAAQA,GAAR,CAAmBhE,iBCT5CiE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c2be8c00.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a\n          href={movie.imdbUrl}\n          data-cy=\"movieURL\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie, normalizeMovieData } from '../../api';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movieData, setMovieData] = useState<MovieData | null>(null);\n\n  const handleSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      setIsLoading(true);\n\n      getMovie(query.trim())\n        .then((data) => {\n          if ('Error' in data) {\n            setError(true);\n            setMovieData(null);\n          } else {\n            setMovieData(data);\n            setError(false);\n          }\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }, [query],\n  );\n\n  const movie = movieData ? normalizeMovieData(movieData) : null;\n\n  const handleAddMovie = useCallback(() => {\n    if (movieData && movie) {\n      addMovie(movie);\n    }\n\n    setQuery('');\n    setMovieData(null);\n  }, [movieData, addMovie]);\n\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setError(false);\n    setMovieData(null);\n  }, []);\n\n  const isDisable = query === '';\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={isDisable}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movieData && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {(movieData && movie) && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { Movie } from './types/Movie';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=c5e2348d';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n\nexport function normalizeMovieData(movieData: MovieData): Movie {\n  const poster = movieData.Poster !== 'N/A';\n\n  return {\n    title: movieData.Title,\n    description: movieData.Plot,\n    imgUrl: poster\n      ? movieData.Poster\n      : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n    imdbId: movieData.imdbID,\n    imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n  };\n}\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const hasMovie = movies.some(film => film.imdbId === movie.imdbId);\n\n    if (!hasMovie) {\n      setMovies(prevState => [...prevState, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}